version: '3'

volumes:
  postgres-db-volume:

services:
  postgres:
    image: postgres:13-alpine
    env_file:
      - .env
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  airflow-init:
    build: .
    entrypoint: scripts/entrypoint.sh
    depends_on:
      - postgres
    env_file:
      - .env

  scheduler:
    build: .
    command: scheduler
    restart: on-failure:5
    depends_on:
      - airflow-init
    env_file:
      - .env
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./scripts:/opt/airflow/scripts

  webserver:
    build: .
    command: webserver
    restart: on-failure:5
    depends_on:
      - airflow-init
    env_file:
      - .env
    environment:
      - _AIRFLOW_WWW_USER_USERNAME=${AIRFLOW_WWW_USER_USERNAME}
      - _AIRFLOW_WWW_USER_PASSWORD=${AIRFLOW_WWW_USER_PASSWORD}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./scripts:/opt/airflow/scripts
    user: "${AIRFLOW_UID:-50000}:0"
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD-SHELL", "[ -f /home/airflow/airflow-webserver.pid ]" ]
      interval: 30s
      timeout: 30s
      retries: 3

